version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: envios_express_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: envios_express_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - envios_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d envios_express_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Aplicaci√≥n .NET
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: envios_express_api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=envios_express_db;Username=postgres;Password=postgres123;Include Error Detail=true
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_LOGGING__LOGLEVEL__DEFAULT=Information
      - ASPNETCORE_LOGGING__LOGLEVEL__MICROSOFT=Warning
    ports:
      - "5190:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - envios_network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # pgAdmin para administrar la base de datos
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: envios_express_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@enviosexpress.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - envios_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  envios_network:
    driver: bridge